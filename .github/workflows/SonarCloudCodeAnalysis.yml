name: SonarCloudCodeAnalysis
permissions:
  contents: read
  
on:
  push:
    branches: [ 'dev', 'main', 'dependabot', 'aa' ] # 在推送到主干分支时触发
  pull_request:
    branches: [ 'dev', 'main', 'dependabot', 'aa' ] # 在任何针对主干分支的PR创建时触发
  workflow_dispatch:     

  
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarScanner可能需要完整的提交历史

      - name: SetupJDK
        uses: actions/setup-java@v5
        with:
          java-version: '21' # 或你的项目使用的JDK版本
          distribution: 'temurin'

      - name: CacheMavenDependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: BuildAndAnalyzeWithSonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # 在GitHub仓库Secrets中设置的SonarCloud Token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub自动提供的Token，用于上传PR检查结果
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ACANX_MetaOpen -Dsonar.organization=acanx -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.branch.name=${{ github.ref_name }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.qualitygate.wait=true -Dgpg.skip=true -e -X -U 
