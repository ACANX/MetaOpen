name: MavenMultiBranchMultiJDKCI

on:
  push:
    branches:
      - dependabot
      - dev
      - main
      - feat-autoci
    # paths:  # 只在特定路径变更时触发
    #   - '**.java'
    #   - 'pom.xml'
    #   - '.github/workflows/**'      
    paths-ignore: # 可选：忽略某些文件的变更以避免触发构建
      - '**.md'
      - '.gitignore'
  pull_request:
    branches:
      - dependabot
      - dev
      - main
      - feat-autoci
  workflow_dispatch: # 允许在GitHub页面上手动触发工作流
  
permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }} with JDK ${{ matrix.java }} (branch=${{ matrix.branch }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # 分支 → JDK 版本映射（固定每个分支的JDK版本），并在两种OS上跑
          - branch: dependabot
            java: '11'
            os: ubuntu-latest
          - branch: dependabot
            java: '11'
            os: windows-latest

          - branch: dev
            java: '11'
            os: ubuntu-latest
          - branch: dev
            java: '11'
            os: windows-latest

          - branch: main
            java: '11'
            os: ubuntu-latest
          - branch: main
            java: '11'
            os: windows-latest

          - branch: feat-autoci
            java: '11'
            os: ubuntu-latest
          - branch: feat-autoci
            java: '11'
            os: windows-latest

    # 只在当前触发分支对应的矩阵项上执行（避免其他矩阵项空跑）
    if: github.ref_name == matrix.branch

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven

      # 可选：显示Java/Maven版本以便排错
      - name: Show Java and Maven versions
        run: |
          java -version
          mvn -v

      # 可选：如项目有私有仓库或镜像，这里可写入settings.xml（示例保留结构）
      # - name: Configure Maven settings
      #   run: |
      #     mkdir -p ~/.m2
      #     cat > ~/.m2/settings.xml <<'EOF'
      #     <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
      #               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      #               xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
      #       <!-- mirrors, servers, profiles -->
      #     </settings>
      #     EOF

      # 构建（不跳过测试）
      - name: Build with tests
        run: mvn -B -ntp -Dstyle.color=always clean verify

      # 可选：上传构建产物（例如所有模块的jar）
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.branch }}-jdk${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/*.jar
            **/target/*.war
            **/target/*.zip
          if-no-files-found: ignore
