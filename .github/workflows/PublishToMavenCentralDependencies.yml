name: PublishToMavenCentralDependencies
permissions:
  contents: read

on:
  release:
    types: [created] # 当在GitHub上创建新的Release时触发
  # 你也可以手动触发
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: CheckoutCode
        uses: actions/checkout@v4

      - name: SetupJava
        uses: actions/setup-java@v5
        with:
          java-version: '21' # 或你项目使用的JDK版本
          distribution: 'temurin'
          cache: 'maven'
          # 通常会在 pom.xml 或 settings.xml 中配置 gpg 相关信息

      # - name: DebugGPGPrivateKey (Temporary)
      #   run: |
      #     echo "Key length: ${#GPG_KEY}"
      #     echo "Key content (first 100 chars): ${GPG_KEY:0:100}"
      #     # 检查是否包含起始和结束标记
      #     if [[ "$GPG_KEY" == *"BEGIN PGP PRIVATE KEY BLOCK"* && "$GPG_KEY" == *"END PGP PRIVATE KEY BLOCK"* ]]; then
      #       echo "✅ Key appears to contain valid PGP block markers."
      #     else
      #       echo "❌ Key is missing PGP block markers. This is likely the issue."
      #     fi
      #   env:
      #     GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

          # 通常会在 pom.xml 或 settings.xml 中配置 gpg 相关信息

      - name: ImportGPGKey
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: ConfigureMavenSettingsForSonatype
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>sonatype-nexus-staging</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_TOKEN }}</password>
              </server>
              <server>
                <id>sonatype-nexus-snapshots</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF
        shell: bash

      - name: PublishToMavenCentral
        working-directory: os-dependencies # 设置工作目录为 os-dependencies
        run: mvn -B clean deploy
        env:
          # 假设你的 Maven GPG 插件配置或 settings.xml 使用这些变量
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          # 如果 Maven 配置需要明确 Key ID：
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
